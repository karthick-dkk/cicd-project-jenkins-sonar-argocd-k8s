pipeline {
  agent {
    docker {
      image 'karthickdk02/maven-karthick-docker:v1.1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/karthick-dkk/cicd-project-jenkins-sonar-argocd-k8s'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd app-files/ && mvn clean package'
      }
    }
    stage('Sonarqube Code Analysis') {
      environment {
        SONAR_URL = "http://3.109.182.42:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd app-files/ && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build Image and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "karthickdk02/project-cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "app-files/Dockerfile"
       //  REGISTRY_CREDENTIALS = credentials('docker-cert')
      }
      steps {
        withCredentials([string(credentialsId: 'docker-key', variable: 'DOCKER_CERT')]) {
        script {
            sh 'cd app-files && docker build -t ${DOCKER_IMAGE} .'
            sh 'docker login -u "karthickdk02" -p "${DOCKER_CERT}" docker.io'
            sh 'docker tag ${DOCKER_IMAGE} ${DOCKER_IMAGE}'
            sh 'docker push ${DOCKER_IMAGE}'
  
            }
	  }
        }
      
    }
    stage('Update Deployment File for k8s') {
        environment {
            GIT_REPO_NAME = "cicd-project-jenkins-sonar-argocd-k8s"
            GIT_USER_NAME = "karthick-dkk"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "karthidkk123@gmail.com"
                    git config user.name "karthick-dkk"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" app-manifests/deployment.yml
                    git add app-manifests/deployment.yml
                    git commit -m "docker image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
